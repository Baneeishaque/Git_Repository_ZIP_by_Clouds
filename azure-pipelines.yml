parameters:
  - name: vmImage
    displayName: Pool VM Image
    type: string
    default: windows-latest
    values:
      - windows-latest
      - ubuntu-latest

  - name: hostingProvider
    displayName: Hosting Provider
    type: string
    default: github.com
    values:
      - github.com
      - gitlab.com

  - name: repositoryOwner
    displayName: Repository Owner
    type: string

  - name: repositoryName
    displayName: Repository Name
    type: string

  - name: cloneType
    displayName: Clone Type
    type: string
    default: Full
    values:
      - Full
      - Blobless
      - Treeless
      - Shallow (Depth 1)

trigger: none

jobs:
  - job: "Upload_Zip_of_Git_Repository"

    pool:
      vmImage: ${{parameters.vmImage}}

    steps:
      - checkout: self
        fetchDepth: "1"

      - script: git --version
        displayName: "Check for Git"

      - ${{if eq(parameters.cloneType, 'Full')}}:
        - script: git clone https://${{ parameters.hostingProvider }}/${{ parameters.repositoryOwner }}/${{ parameters.repositoryName }}.git
          displayName: "Clone Repository"
      
      - ${{if eq(parameters.cloneType, 'Blobless')}}:
        - script: git clone --filter=blob:none https://${{ parameters.hostingProvider }}/${{ parameters.repositoryOwner }}/${{ parameters.repositoryName }}.git
          displayName: "Clone Repository"
      
      - ${{if eq(parameters.cloneType, 'Treeless')}}:
        - script: git clone --filter=tree:0 https://${{ parameters.hostingProvider }}/${{ parameters.repositoryOwner }}/${{ parameters.repositoryName }}.git
          displayName: "Clone Repository"
      
      - ${{if eq(parameters.cloneType, 'Shallow (Depth 1)')}}:
        - script: git clone --depth=1 https://${{ parameters.hostingProvider }}/${{ parameters.repositoryOwner }}/${{ parameters.repositoryName }}.git
          displayName: "Clone Repository"

      - script: |
          echo
          echo Repository Contents
          echo --------------------------------------------------------
          ls -all ${{ parameters.repositoryName }}
        displayName: "Verify Clone"

      - ${{if eq(parameters.vmImage, 'windows-latest')}}:
        - script: 7z i
          displayName: "Check for 7Zip"

      - ${{if eq(parameters.vmImage, 'ubuntu-latest')}}:
        - script: zip --version
          displayName: "Check for Zip"

      # Compress Repository & Verify Compress
      - ${{if eq(parameters.vmImage, 'windows-latest')}}:
        - script: |
            7z a -tzip ${{ parameters.repositoryOwner }}_${{ parameters.repositoryName }}_${{ parameters.vmImage }}.zip ${{ parameters.repositoryName }}
            echo
            echo Current Directory Contents
            echo --------------------------------------------------------
            dir
          displayName: "Zip Repository"

      - ${{if eq(parameters.vmImage, 'ubuntu-latest')}}:
        - script: |
            zip -r ${{ parameters.repositoryOwner }}_${{ parameters.repositoryName }}_${{ parameters.vmImage }}.zip ${{ parameters.repositoryName }}
            echo
            echo Current Directory Contents
            echo --------------------------------------------------------
            ls
          displayName: "Zip Repository"

      - publish: "${{ parameters.repositoryOwner }}_${{ parameters.repositoryName }}_${{ parameters.vmImage }}.zip"
        artifact: "${{ parameters.repositoryOwner }}_${{ parameters.repositoryName }}_${{ parameters.vmImage }}"
